version: 0.2
env:
  variables:
    REPOSITORY_URI: 655821005352.dkr.ecr.us-east-2.amazonaws.com/vulnnodeapp
phases:
  install:
    runtime-versions:
      nodejs: 18
    commands:
      - echo "Instalando dependencias de Node.js..."
      - npm install

pre_build:
    commands:
      - echo "Logueando en Amazon ECR..."
      - aws --version
      - aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin $REPOSITORY_URI
      - export IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - echo "Tag de imagen: $IMAGE_TAG"

build:
    commands:
      - echo "Construyendo imagen Docker..."
      - docker build -t $REPOSITORY_URI:$IMAGE_TAG .
      - docker tag $REPOSITORY_URI:$IMAGE_TAG $REPOSITORY_URI:latest

post_build:
    commands:
      - echo "Entrando al directorio de código fuente..."
      - cd $CODEBUILD_SRC_DIR

      - echo "Pusheando imagen a ECR..."
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - docker push $REPOSITORY_URI:latest

      - echo "Creando imagedefinitions.json..."
      - printf '[{"name":"vulnnodeapp","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json

      - echo "Instalando Trivy y escaneando la imagen Docker..."
      - curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin
      - trivy image --no-progress $REPOSITORY_URI:$IMAGE_TAG > trivy-report.txt || true

      - echo "Instalando Gitleaks y escaneando código fuente..."
      - curl -sSL https://github.com/gitleaks/gitleaks/releases/latest/download/gitleaks-linux-amd64 -o gitleaks
      - chmod +x gitleaks
      - ./gitleaks detect --source . --report-format sarif --report-path gitleaks-report.sarif || true

artifacts:
  base-directory: .
  files:
    - imagedefinitions.json
    - trivy-report.txt
    - gitleaks-report.sarif

